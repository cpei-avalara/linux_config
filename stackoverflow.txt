https://stackoverflow.com/questions/8108981/how-can-variadic-char-template-arguments-from-user-defined-literals-be-converted
https://stackoverflow.com/questions/2033110/passing-a-string-literal-as-a-parameter-to-a-c-template-class
https://stackoverflow.com/questions/44779780/user-defined-string-literal-is-string-null-terminated
https://stackoverflow.com/questions/15858141/conveniently-declaring-compile-time-strings-in-c
https://stackoverflow.com/questions/13112369/user-defined-string-literals-vs-other-user-defined-literals
https://www.reddit.com/r/cpp/comments/53m612/the_case_for_optional_references/
https://www.daniweb.com/programming/software-development/code/482276/c-11-compile-time-string-concatenation-with-constexpr
https://ibob.github.io/blog/2018/07/03/compiler-generated-move/
https://akrzemi1.wordpress.com/2012/10/23/user-defined-literals-part-ii/
https://akrzemi1.wordpress.com/2014/04/14/common-optimizations/
https://akrzemi1.wordpress.com/2017/06/28/compile-time-string-concatenation/
https://hackernoon.com/experimenting-with-small-buffer-optimization-for-c-lambdas-d5b703fb47e4
https://www.murrayc.com/permalink/2017/06/20/c-stdstring_view-not-so-useful-when-calling-c-functions/

https://akrzemi1.wordpress.com/2017/06/28/compile-time-string-concatenation/ talks about std::function is too general and used heap allocation (PIMPL). User defined a smallfunc to replace std::function which could be improved to add noexcept to avoid the issues below.
https://ibob.github.io/blog/2018/07/03/compiler-generated-move/ talks about std::function does not have a noexcept move constructor so an array of objects which has std::function as a member will copy instead of move during resize because compiler generated move constructor does not have noexcept and std::vector use move_if_noexcept to determine to copy or move during resizing.


https://stackoverflow.com/questions/161177/does-c-support-finally-blocks-and-whats-this-raii-i-keep-hearing-about
https://en.wikipedia.org/wiki/Find_first_set
https://stackoverflow.com/questions/466204/rounding-up-to-next-power-of-2
https://stackoverflow.com/questions/108318/whats-the-simplest-way-to-test-whether-a-number-is-a-power-of-2-in-c

https://infiniteundo.com/post/25326999628/falsehoods-programmers-believe-about-time
https://infiniteundo.com/post/25509354022/more-falsehoods-programmers-believe-about-time
http://wouter.coekaerts.be/2018/java-type-system-broken
https://codesynthesis.com/~boris/blog/2012/07/24/const-rvalue-references/
https://www.bfilipek.com/2018/07/menu-cpp17-example.html
http://tantalon.com/pete/cppopt/final.htm

https://www.reddit.com/r/cpp/comments/9baxn0/how_to_specialize_stdsort_by_binding_the/
https://www.reddit.com/r/cpp/comments/3m0rsk/functional_whats_new_and_proper_usage/cvbs8bq/?context=3&st=jlfr58qn&sh=ad0b1598
https://blog.therocode.net/2018/09/compile-time-string-parsing

https://www.7pace.com/blog/become-a-better-programmer-skills-development
https://stackoverflow.com/questions/20517259/why-vector-access-operators-are-not-specified-as-noexcept
https://gieseanw.wordpress.com/2018/12/29/stop-reimplementing-the-virtual-table-and-start-using-double-dispatch/

https://blog.regehr.org/archives/213

linux trap manual
http://mywiki.wooledge.org/SignalTrap
programming competitive
https://cpbook.net/

