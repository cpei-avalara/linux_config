" ~/.vimrc (configuration file for vim only)
" start Vbundle settings
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
" Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}
Plugin 'Valloric/YouCompleteMe'
Plugin 'vim-airline/vim-airline'

Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
"nnoremap A :Ag 
nnoremap F :FZF<CR>


" Configure fzf mappings
map <leader>s :Ag<space>
map <C-p> :Files<CR>
map <leader>l :Buffer<CR>
map <leader>t :GFiles<CR>
map <leader>h :Commands<CR>
map <leader>? :Helptags<CR>
map <leader>gs :GFiles?<CR>
map <leader>gl :Commits<CR>
map <leader>gbl :BCommits<CR>
imap <C-x><C-l> <plug>(fzf-complete-line)


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
" End of Vbundle
"-----------------------------------------------------------------------
set nu
colorscheme elflord

" latex suite settings
" IMPORTANT: win32 users will need to have 'shellslash' set so that latex
" can be called correctly.
"set shellslash
" IMPORTANT: grep will sometimes skip displaying the file name if you
" search in a singe file. This will confuse latex-suite. Set your grep
" program to alway generate a file-name.
"set grepprg=grep\ -nH\ $*


set backup
set backupdir=~/.backup
set dir=~/.backup
syntax on
" set printers
"set pdev=color_208

" tab instead of space
set tabstop=4
set shiftwidth=4
set expandtab
set ruler
set hlsearch

"execute pathogen#infect()
" set runtimepath^=~/.vim/bundle/ctrlp.vim
set list

" powerline
" set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/
" Always show statusline
" set laststatus=2
" Use 256 colours (Use this setting only if your terminal supports 256 colours)

let g:clang_library_path='/opt/bats/lib'
let g:clang_user_options='|| exit 0'

" disable /enable YCM
" nnoremap ""leader>y :let g:ycm_auto_trigger=0<CR>
" nnoremap ""leader>Y :let g:ycm_auto_trigger=1<CR>
" set runtimepath-=~/.vim/bundle/YouCompleteMe
" this is neede when ycm is compiled with a different version of python
"let g:ycm_server_python_interpreter='/usr/bin/python'

" switch between header and source code
map <F4> :e %:p:s,.h$,.X123X,:s,.cpp$,.h,:s,.X123X$,.cpp,<CR>

" set rtp+=~/.fzf
" set runtimepath^=~/.vim/bundle/ag


" netrw (vim built-in browser)
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25
"augroup ProjectDrawer
"   autocmd!
"   autocmd VimEnter * :Vexplore
"augroup END


" cscope setting
"set tags=~/db/gitlabtag

" misc
set cursorline
" set cursorcolumn

" vertical separation bar
set fillchars+=vert:â”‚
hi VertSplit ctermbg=NONE guibg=NONE cterm=NONE
autocmd ColorScheme * highlight VertSplit cterm=NONE ctermfg=Green ctermbg=Black
set backspace=indent,eol,start
" let &colorcolumn="80,".join(range(120,999),",")
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'
let g:ycm_confirm_extra_conf = 0

"-------------------------------------------------------------------------------
" Configure autocommmands
"-------------------------------------------------------------------------------

command -range=% StripTrailingWhitespace <line1>,<line2>s/\s\+$//e | norm! ``

augroup vimrc_autocmd
    autocmd!
    " Modify default tabstop and textwidth/formatting
    au FileType cmake,xml setlocal tabstop=2
    au FileType cmake,xml setlocal shiftwidth=2

    au FileType cpp,python setlocal textwidth=90
    au FileType cpp,python setlocal formatoptions=crqnj

    " Strip trailing white spaces in source code.
    "au BufWritePre *.cpp,*.hpp,*.h,*.c :StripTrailingWhitespace
    au BufWritePre .vimrc,*.js,*.php :StripTrailingWhitespace

    " Add support for Doxygen comment leader.
    au FileType h,hpp,cpp,c setlocal comments^=:///

    " Override vim-polyglot changes to git commit formatting
    au FileType gitcommit setlocal formatlistpat=^\\s*[0-9*-]\\+[\\]:.)}\\t\ ]\\s*
    au FileType gitcommit setlocal formatoptions+=n

    " sqli files are actually sql files
    au BufRead,BufNewFile *.sqli setlocal filetype=sql

    " Resize splits when the window is resized.
    au VimResized * exe "normal! \<c-w>="

    " Return to last edit position when opening files (You want this!)
    au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
                 \ |   exe "normal! g`\""
                 \ | endif

    " Add preview functionality to fzf
    au VimEnter * command! -bang -nargs=? -complete=dir Files
                \ call fzf#vim#files(<q-args>, fzf#vim#with_preview(), <bang>0)

    au VimEnter * command! -bang -nargs=* Ag
                \ call fzf#vim#ag(<q-args>,
                \                 <bang>0 ? fzf#vim#with_preview('up:60%')
                \                         : fzf#vim#with_preview('right:50%:hidden', '?'),
                \                 <bang>0)

augroup END
